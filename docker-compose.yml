# docker-compose build
version: '3.9'
volumes:
  dbbackups:
  postgis-data:

services:

  db:
    image: kartoza/postgis:14-3.2
    volumes:
      - postgis-data:/var/lib/postgresql
      - dbbackups:/backups
    environment:
      # If you need to create multiple database you can add coma separated databases eg gis,data
      - POSTGRES_DB=gis
      - POSTGRES_USER=admin
      - POSTGRES_PASS=admin
      - ALLOW_IP_RANGE=0.0.0.0/0
      # Add extensions you need to be enabled by default in the DB. Default are the five specified below
      - POSTGRES_MULTIPLE_EXTENSIONS=postgis,hstore,postgis_topology,postgis_raster,pgrouting
    container_name: postgres-db
    ports:
      - "5432:5432"
    restart: on-failure
    healthcheck:
      test: "exit 0"

  dbbackups:
    image: kartoza/pg-backup:14-3.2
    hostname: pg-backups
    volumes:
      - dbbackups:/backups
    environment:
      - DUMPPREFIX=PG_db
      - POSTGRES_USER=docker
      - POSTGRES_PASS=docker
      - POSTGRES_PORT=5432
      - POSTGRES_HOST=db
    container_name: db-backup
    restart: on-failure
    depends_on:
      db:
        condition: service_healthy
  nestjs:
    build:
      context: .
      dockerfile: ./Dockerfile
    image: ijazulrehman/offers-filteration-app:latest
    env_file:
      - .env
    environment:
      - DB_HOST=postgres-db
    ports:
      - "4040:3000" # expose-to-the-world : only-in-the-docker
    container_name: jobs-offers-app
    depends_on:
      - db
      - dbbackups
    volumes:
      - .:/app
      - /app/node_modules